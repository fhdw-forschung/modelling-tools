# This workflow will upload a Python Package using Pycaret when a release is created

# procedure for automatic Publish run (.github/workflows/publish.yml):
# - make changes; commit
# - manually bump the version with Poetry; commit
# - merge into main
# - add git tag and push to remote
# - create a release based on the Tag

# TODO: add predefined workflow to streamline procedure
# https://github.com/marketplace/actions/github-release-from-tag

name: Publish Package to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  call-lint-workflow:
    uses: ./.github/workflows/lint-reusable.yml
    name: Code Quality Check
    with:
      python-version: ${{ vars.PYTHON_VERSION }}

  call-test-workflow:
    uses: ./.github/workflows/pytest-reusable.yml
    name: Run Testing with pytest
    needs: call-lint-workflow
    with:
      python-version: ${{ vars.PYTHON_VERSION }}

  test-deploy:
    runs-on: ubuntu-latest

    needs: call-test-workflow

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ vars.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Build package
        run: poetry build

      - name: Add test-pypi Repository
        run: poetry config repositories.test-pypi https://test.pypi.org/legacy/

      - name: Publish package
        run: poetry publish -r test-pypi -u __token__ -p ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Installation Test
        run: pip install -i https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple fhdw-modelling

  deploy:
    runs-on: ubuntu-latest

    needs: test-deploy

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ vars.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Build package
        run: poetry build

      - name: Publish package
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}

      - name: Installation Test
        run: pip install fhdw-modelling
